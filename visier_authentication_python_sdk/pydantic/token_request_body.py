# coding: utf-8

"""
    Visier Authentication APIs

    Visier APIs for generating authentication tokens

    The version of the OpenAPI document: 22222222.99201.1200
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class TokenRequestBody(BaseModel):
    # The grant type. Supported values: - `authorization_code`: The authorization code grant type. - `password`: The password grant type. - `urn:visier:params:oauth:grant-type:asid-token`: The ASID token grant type.
    grant_type: typing.Optional[str] = Field(None, alias='grant_type')

    # The ID of the pre-registered client application.
    client_id: typing.Optional[str] = Field(None, alias='client_id')

    # The optional URI to redirect to after authorization.
    redirect_uri: typing.Optional[str] = Field(None, alias='redirect_uri')

    # The authorization code. Applicable only for authorization code grant type.
    code: typing.Optional[str] = Field(None, alias='code')

    # The username of the user to authenticate. Applicable only for password grant type.
    username: typing.Optional[str] = Field(None, alias='username')

    # The password of the user to authenticate. Applicable only for password grant type.
    password: typing.Optional[str] = Field(None, alias='password')

    # The ASID token. Applicable only for ASID token grant type.
    asid_token: typing.Optional[str] = Field(None, alias='asid_token')
    class Config:
        arbitrary_types_allowed = True
